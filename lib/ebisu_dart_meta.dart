/// 
/// Support for storing dart meta data for purpose of generating code. Essentially
/// this is a model of structural code items that comprise dart systems. Things like
/// libraries (Library), classes (Class), class members (Member), pubspecs
/// (PubSpec), etc. A very nice feature of Dart is the dot-dot _.._ operator, which
/// allows one to conveniently string together accessor calls to objects. For
/// example, the following is the structure of the imported id library.
///
///       library('id')
///       ..doc = '...'
///       ..includeLogger = true
///       ..imports = [
///         'dart:convert'
///       ]
///       ..classes = [
///         class_('id')
///         ..doc = "Given an id (all lower case string of words separated by '_')..."
///         ..ctorSansNew = true
///         ..members = [
///           member('id')
///           ..doc = "String containing the lower case words separated by '_'"
///           ..access = Access.RO
///           ..isFinal = true,
///           member('words')
///           ..doc = "Words comprising the id"
///           ..type = 'List<String>'
///           ..access = Access.RO
///           ..isFinal = true
///         ]
///       ]
///     ];
///
///
/// The libraries are composed into a system and the system is generated. So, all
/// the code structure in ebisu was generated by itself. Code generation of this
/// sort is much more useful in the more verbose languages like C++ where things
/// like ORM, object serialization, object streaming etc are very
/// boilerplate. However some good use cases exist in Dart, like generating the
/// structure of a large Dart library from an existing spec or data input
/// (e.g. imagine trying to create a Dart library to support a FIX specification
/// which is stored in XML). A simple use that is provided as an extension is the
/// ability take a simple Altova UML model in XMI format and convert it to Dart
/// classes with JSON support.
///
/// 
library ebisu_dart_meta;

import 'dart:io';
import 'dart:convert' as convert;
import 'package:ebisu/ebisu.dart';
import 'package:id/id.dart';
import 'package:ebisu/ebisu_utils.dart' as EBISU_UTILS;
import 'templates/dart_meta.dart' as META;
import 'package:logging/logging.dart';
// custom <additional imports>
// end <additional imports>

part "src/ebisu_dart_meta/dart_meta.dart";

final _logger = new Logger("ebisu_dart_meta");

// custom <library ebisu_dart_meta>
// end <library ebisu_dart_meta>

